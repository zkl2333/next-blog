generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model typecho_comments {
  coid     Int     @id @default(autoincrement()) @db.UnsignedInt
  cid      Int?    @default(0) @db.UnsignedInt
  created  Int?    @default(0) @db.UnsignedInt
  author   String? @db.VarChar(200)
  authorId Int?    @default(0) @db.UnsignedInt
  ownerId  Int?    @default(0) @db.UnsignedInt
  mail     String? @db.VarChar(200)
  url      String? @db.VarChar(255)
  ip       String? @db.VarChar(64)
  agent    String? @db.VarChar(511)
  text     String? @db.Text
  type     String? @default("comment") @db.VarChar(16)
  status   String? @default("approved") @db.VarChar(16)
  parent   Int?    @default(0) @db.UnsignedInt

  @@index([cid], map: "cid")
  @@index([created], map: "created")
}

model typecho_contents {
  cid          Int            @id @default(autoincrement()) @db.UnsignedInt
  title        String?        @db.VarChar(200)
  slug         String?        @unique(map: "slug") @db.VarChar(200)
  created      Int?           @default(0) @db.UnsignedInt
  modified     Int?           @default(0) @db.UnsignedInt
  text         String?        @db.LongText
  order        Int?           @default(0) @db.UnsignedInt
  author       typecho_users? @relation(fields: [authorId], references: [uid])
  authorId     Int?           @default(0) @db.UnsignedInt
  template     String?        @db.VarChar(32)
  type         String?        @default("post") @db.VarChar(16)
  status       String?        @default("publish") @db.VarChar(16)
  password     String?        @db.VarChar(32)
  commentsNum  Int?           @default(0) @db.UnsignedInt
  allowComment String?        @default("0") @db.Char(1)
  allowPing    String?        @default("0") @db.Char(1)
  allowFeed    String?        @default("0") @db.Char(1)
  parent       Int?           @default(0) @db.UnsignedInt

  @@index([created], map: "created")
}

model typecho_fields {
  cid         Int     @db.UnsignedInt
  name        String  @db.VarChar(200)
  type        String? @default("str") @db.VarChar(8)
  str_value   String? @db.Text
  int_value   Int?    @default(0)
  float_value Float?  @default(0) @db.Float

  @@id([cid, name])
  @@index([float_value], map: "float_value")
  @@index([int_value], map: "int_value")
}

model typecho_links {
  lid         Int     @id @default(autoincrement()) @db.UnsignedInt
  name        String? @db.VarChar(200)
  url         String? @db.VarChar(200)
  email       String? @db.VarChar(200)
  sort        String? @db.VarChar(200)
  image       String? @db.VarChar(200)
  description String? @db.VarChar(200)
  user        String? @db.VarChar(200)
  order       Int?    @default(0) @db.UnsignedInt
}

model typecho_mail {
  id      Int      @id @default(autoincrement()) @db.UnsignedInt
  content String   @db.Text
  sent    Boolean? @default(false)
  log     String?  @db.Text
}

model typecho_metas {
  mid         Int     @id @default(autoincrement()) @db.UnsignedInt
  name        String? @db.VarChar(200)
  slug        String? @db.VarChar(200)
  type        String  @db.VarChar(32)
  description String? @db.VarChar(200)
  count       Int?    @default(0) @db.UnsignedInt
  order       Int?    @default(0) @db.UnsignedInt
  parent      Int?    @default(0) @db.UnsignedInt

  @@index([slug], map: "slug")
}

model typecho_options {
  name  String  @db.VarChar(32)
  user  Int     @default(0) @db.UnsignedInt
  value String? @db.Text

  @@id([name, user])
}

model typecho_relationships {
  cid Int @db.UnsignedInt
  mid Int @db.UnsignedInt

  @@id([cid, mid])
}

model typecho_users {
  uid              Int                @id @default(autoincrement()) @db.UnsignedInt
  name             String?            @unique(map: "name") @db.VarChar(32)
  password         String?            @db.VarChar(64)
  mail             String?            @unique(map: "mail") @db.VarChar(200)
  url              String?            @db.VarChar(200)
  screenName       String?            @db.VarChar(32)
  created          Int?               @default(0) @db.UnsignedInt
  activated        Int?               @default(0) @db.UnsignedInt
  logged           Int?               @default(0) @db.UnsignedInt
  group            String?            @default("visitor") @db.VarChar(16)
  authCode         String?            @db.VarChar(64)
  typecho_contents typecho_contents[]
}
