generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Comment {
  coid     Int     @id @default(autoincrement()) @db.UnsignedInt
  cid      Int?    @default(0) @db.UnsignedInt
  created  Int?    @default(0) @db.UnsignedInt
  author   String? @db.VarChar(150)
  authorId Int?    @default(0) @db.UnsignedInt
  ownerId  Int?    @default(0) @db.UnsignedInt
  mail     String? @db.VarChar(150)
  url      String? @db.VarChar(255)
  ip       String? @db.VarChar(64)
  agent    String? @db.VarChar(511)
  text     String? @db.Text
  type     String? @default("comment") @db.VarChar(16)
  status   String? @default("approved") @db.VarChar(16)
  parent   Int?    @default(0) @db.UnsignedInt

  @@index([cid], map: "cid")
  @@index([created], map: "created")
  @@map("typecho_comments")
}

model Content {
  cid           Int             @id @default(autoincrement()) @db.UnsignedInt
  title         String?         @db.VarChar(150)
  slug          String?         @unique(map: "slug") @db.VarChar(150)
  created       Int?            @default(0) @db.UnsignedInt
  modified      Int?            @default(0) @db.UnsignedInt
  text          String?         @db.LongText
  order         Int?            @default(0) @db.UnsignedInt
  author        User?           @relation(fields: [authorId], references: [uid])
  authorId      Int?            @default(0) @db.UnsignedInt
  template      String?         @db.VarChar(32)
  type          String?         @default("post") @db.VarChar(16)
  status        String?         @default("publish") @db.VarChar(16)
  password      String?         @db.VarChar(32)
  commentsNum   Int?            @default(0) @db.UnsignedInt
  allowComment  String?         @default("0") @db.Char(1)
  allowPing     String?         @default("0") @db.Char(1)
  allowFeed     String?         @default("0") @db.Char(1)
  parent        Int?            @default(0) @db.UnsignedInt
  relationships Relationships[]

  @@index([created], map: "created")
  @@map("typecho_contents")
}

model Field {
  cid         Int     @db.UnsignedInt
  name        String  @db.VarChar(150)
  type        String? @default("str") @db.VarChar(8)
  str_value   String? @db.Text
  int_value   Int?    @default(0)
  float_value Float?  @default(0) @db.Float


  @@id([cid, name])
  @@index([float_value], map: "float_value")
  @@index([int_value], map: "int_value")
  @@map("typecho_fields")
}

model Link {
  lid         Int     @id @default(autoincrement()) @db.UnsignedInt
  name        String? @db.VarChar(200)
  url         String? @db.VarChar(200)
  email       String? @db.VarChar(200)
  sort        String? @db.VarChar(200)
  image       String? @db.VarChar(200)
  description String? @db.VarChar(200)
  user        String? @db.VarChar(200)
  order       Int?    @default(0) @db.UnsignedInt

  @@map("typecho_links")
}

model Mail {
  id      Int      @id @default(autoincrement()) @db.UnsignedInt
  content String   @db.Text
  sent    Boolean? @default(false)
  log     String?  @db.Text

  @@map("typecho_mail")
}

model Meta {
  mid         Int     @id @default(autoincrement()) @db.UnsignedInt
  name        String? @db.VarChar(150)
  slug        String? @db.VarChar(150)
  type        String  @db.VarChar(32)
  description String? @db.VarChar(150)
  count       Int?    @default(0) @db.UnsignedInt
  order       Int?    @default(0) @db.UnsignedInt
  parent      Int?    @default(0) @db.UnsignedInt

  relationships Relationships[]

  @@index([slug], map: "slug")
  @@map("typecho_metas")
}

model Option {
  name  String  @db.VarChar(32)
  user  Int     @default(0) @db.UnsignedInt
  value String? @db.Text

  @@id([name, user])
  @@map("typecho_options")
}

model Relationships {
  cid      Int     @db.UnsignedInt
  contents Content @relation(fields: [cid], references: [cid])
  mid      Int     @db.UnsignedInt
  metas    Meta    @relation(fields: [mid], references: [mid])

  @@id([cid, mid])
  @@map("typecho_relationships")
}

model User {
  uid              Int       @id @default(autoincrement()) @db.UnsignedInt
  name             String?   @unique(map: "name") @db.VarChar(32)
  password         String?   @db.VarChar(64)
  mail             String?   @unique(map: "mail") @db.VarChar(150)
  url              String?   @db.VarChar(150)
  screenName       String?   @db.VarChar(32)
  created          Int?      @default(0) @db.UnsignedInt
  activated        Int?      @default(0) @db.UnsignedInt
  logged           Int?      @default(0) @db.UnsignedInt
  group            String?   @default("visitor") @db.VarChar(16)
  authCode         String?   @db.VarChar(64)
  typecho_contents Content[]

  @@map("typecho_users")
}
